package exemple_affichage;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class Condition {

	public String cond_met1;
	public String cond_arg1;
	public String comp;
	public String cond_met2;
	public String cond_arg2;
	
	Condition() {	
	}
	
	Condition(String met1, String met2, String arg1, String arg2, String cmp) {
		this.cond_met1 = met1;
		this.cond_arg1 = arg1;
		this.comp = cmp;
		this.cond_met2 = met2;
		this.cond_arg2 = arg2;
	}
	
	public boolean exec_cond() {
		Object res1 = null;
		Object res2 = null;
		
		if (cond_met1 != "") {
			try {
				Method method = this.cond_met1.getClass().getMethod(cond_met1, String.class);
				try {
					res1 = method.invoke(cond_arg1);
				} catch (IllegalAccessException e) {
					e.printStackTrace();
				} catch (IllegalArgumentException e) {
					e.printStackTrace();
				} catch (InvocationTargetException e) {
					e.printStackTrace();
				}
			} catch (NoSuchMethodException | SecurityException e) {
				e.printStackTrace();
			}
			if (cond_met2 == "") {
				switch(this.comp) {
				case "":
					return (boolean)res1;
				}
			}
		}
		if (cond_met2 != "") {
			try {
				Method method = this.cond_met2.getClass().getMethod(cond_met2, String.class);
				try {
					res2 = method.invoke(cond_arg2);
				} catch (IllegalAccessException e) {
					e.printStackTrace();
				} catch (IllegalArgumentException e) {
					e.printStackTrace();
				} catch (InvocationTargetException e) {
					e.printStackTrace();
				}
			} catch (NoSuchMethodException | SecurityException e) {
				e.printStackTrace();
			}
		}
		
		
		return true;		
	}
	
}
